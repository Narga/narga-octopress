<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lập trình | NARGA]]></title>
  <link href="http://Narga.github.com/narga-octopress/categories/lap-trinh/atom.xml" rel="self"/>
  <link href="http://Narga.github.com/narga-octopress/"/>
  <updated>2013-03-31T00:24:04+07:00</updated>
  <id>http://Narga.github.com/narga-octopress/</id>
  <author>
    <name><![CDATA[Nguyễn Đình Quân]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Writing On Your Palm]]></title>
    <link href="http://Narga.github.com/narga-octopress/2005/07/writing-on-your-palm/"/>
    <updated>2005-07-23T21:48:00+07:00</updated>
    <id>http://Narga.github.com/narga-octopress/2005/07/writing-on-your-palm</id>
    <content type="html"><![CDATA[<p>What format or formats should you release it in? The choices have narrowed somewhat in the last year or two, but there's still nothing approaching a "standard". Here's the lowdown on the current contenders.</p>

<p><strong>Text (.txt)</strong></p>

<p>Ah, the simple, universal and minimalist appeal of good old ASCII. This is the format to use if you want the widest possible distribution and acceptance. Anyone can read ASCII. Unix, Windows, Mac, Palm, Pocket PC, Rocket... Heck, even an old Commodore 64 can read ASCII. Project Gutenberg, a volunteer project to preserve the great public domain works of literature in digital form, uses ASCII because of it's universal, cross platform nature. The downside, of course, is that you have to forgo fancy formatting like italics and aside from possibly distributing the book in a password-protected .zip file, you have no security. I'm not big on copy protection DRM, but I do think that the idea of ebooks at least being read-only has some appeal, so others can't alter your work.</p>

<!-- more -->


<p><strong>Open eBook/XHTML (.htm or .html)</strong></p>

<p>A step beyond ASCII is Open eBook (OEB), itself a varient of XHTML (a dialect of XML that is nearly identical to HTML 4). Confused yet? This is still technically ASCII text, but marked up with XHTML tags and OEB metadata to convey more information about the book and more sophisticated formatting. OEB has the inside track to become the "standard" source format for ebooks, although few ebooks are actually distributed in raw OEB.</p>

<p><strong>Microsoft Reader (.lit)</strong></p>

<p>OEB "under the hood", Microsoft's Reader format is a compiled binary compressed ebook format that at the least protected publically available DRM, is "sealed" from user changes. Although it used OEB source files, you can't read .lit files in a browser. You have to have a copy of Microsoft Reader to properly decompress and unencrypt them. Microsoft Reader files look great, and offer many of the advantages of paper books (pagination, highlighting, annotation) along with the advantages of ebooks (small file sizes, keyword searching, hyperlinks), but it's not as "durable" a format as ASCII since you can only read it on platforms for which a version of Microsoft Reader is available.</p>

<p><strong>Rich Text Format (.rtf)</strong></p>

<p>If you were okay with the security limitations of ASCII but wanted a more sophisticated presentation, there's always RTF. Readable on most modern GUI operating systems, RTF files are printable and offer varied formatting choices. They're also useful as source files for other ebook options (like WordSmith on the PalmOS platform).</p>

<p><strong>Adobe PDF (.pdf)</strong></p>

<p>I hesitate to mention Adobe's Portable Document Format as an ebook format, as that isn't really what it was designed for. The vast thundering majority of PDF files out there are designed to be printed on letter-sized paper, and are very difficult to read on electronic screens. I've said before that PDF isn't an ebook format so much as an electronic transmission and storage format for paper documents. Still, a lot of people insist on using PDF as an ebook format, so here it is. I will admit that for magazines, newsletters and other media for which layout is important, PDF probably provides the best preservation of the print layout.</p>

<p>And before I get into what I think of as the myriad of PDBs, a few words about the PalmOS platform and the difference between a file extension and file format.</p>

<p>PalmOS does not really understand the idea of files, and therefore doesn't care about DOS/Windows file extentions. Everything inside a Palm device takes the form of a database, not a file. Therefore, all PalmOS databases appear on PCs as either .pdb (Palm Database) or .prc (Palm Resource Code) files. These extentions are stripped off and forgotten after the files have been transferred to a Palm, and you can't tell anything about what kind of Palm databases they are from the DOS file extention. I generally try to make use of long filenames under Windows to give some clue to the actual database type (Between Heaven and Hell.isilo.pdb), but a lot of people don't, so you really only have two ways to find out:</p>

<ol>
<li><p>Transfer the file to your Palm and see if it shows up in your ebook reader.</p></li>
<li><p>Open the .pdb file in a PC text editor (be careful not to save it, as you could corrupt the file) and see if you can recognize the string of characters near the top of the file that defines the type of database you have. REAd is PalmDoc, togo is iSilo, BDOC is WordSmith, etc.</p></li>
</ol>


<p>Now that we're all sufficiently befuddled, the PalmOS formats:</p>

<p><strong>PalmDoc (.pdb or .prc)</strong></p>

<p>The original PalmOS ebook format, invented by Rick Bram for his Doc program, later bought out by Aportis to become AportisDoc. A PalmDoc (often referred to simply as Doc, but I'm trying to avoid confusion with Microsoft Word's .doc format) file is, like everything else in a Palm, really a database. It takes the form of simple chain of 4k text records strung together. PalmDoc is the closest PalmOS format you'll find to ASCII, in that does not support any real formatting and is relatively insecure (there's lots of PalmDoc editors out there for PalmOS and Windows). That said, PalmDoc is probably the closest thing out there to a "universal" ebook format, in that it's readable on even more modern platforms than ASCII.</p>

<p><strong>Palm Reader (.pdb)</strong></p>

<p>This is my favorite of the PalmOS formats, mostly because it allows sophisticated formatting, is at least read-only secured, and can be read on both PalmOS devices and Pocket PCs. This format is a marked up, encrypted variant of PalmDoc, and Palm Reader, the reader program for it from Palm Digital Media, can read PalmDoc files as well. This is also a good format to distribute in because it's a fair bet that ebook reading folks will have the free Palm Reader program on their device already, since Palm Digital Media is one of the best (and cheapest) places to find legitimate current bestsellers in ebook format.</p>

<p><strong>MobiPocket (.pdb)</strong></p>

<p>MobiPocket is an up-and-coming format, largely due to their offering free readers for PalmOS and Pocket PC, and their partnership with Baen's Webscriptions. MobiPocket's format isn't that hard to figure out; it's standard PalmDoc with embedded HTML markup tags. You can read a MobiPocket ebook in any PalmDoc reader, but unless you like reading raw HTML, it won't be comfortable. MobiPocket's reader works pretty well, and the price is right. This is also probably the easiest PalmOS format to convert to if you're starting with OEB source files.</p>

<p><strong>iSilo (.pdb)</strong></p>

<p>Another PalmOS format that starts with HTML is iSilo. iSilo isn't a variant of PalmDoc, but uses its own proprietary encryption algorithm to achieve about 20% tighter compression that PalmDoc, Palm Reader or MobiPocket. It also supports pretty much all standard HTML formatting, including hyperlinks and tables. Because of the proprietary encryption, it's a pretty secure format; converting to iSilo is a one-way proposition. No one has yet figured out how to decompile an iSilo document.</p>

<p><strong>TomeRaider (.pdb)</strong></p>

<p>TomeRaider is interesting because it's, in true PalmOS style, as much database as ebook. While I've seen ebooks in TomeRaider format, it's really better suited to reference works than prose, especially, record-based references like movie guides, travel guides, etc. The reader costs money, but is available for both the PalmOS and Pocket PC platforms.</p>

<p>In closing, it's obvious that the "best" format in which to release your ebook is several of the above, as many as you feel you can support. Baen Books offers their webscriptions in RTF, .lit, MobiPocket, HTML and Gemstar's .rb format (which I didn't mention since it's limited to the relatively small market of those with Rocket eBook dedicated readers). I usually offer mine in ASCII, OEB, .
lit, PalmDoc, RTF and Palm Reader formats. Until the ebook industry settles on a standard (which probably will end up one of the PalmOS formats unless Microsoft ports Microsoft Reader to PalmOS, something they haven't ruled out), ebook publishers will have to make books available in formats their customers want, however many that might be.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP4 hay PHP5 ?]]></title>
    <link href="http://Narga.github.com/narga-octopress/2005/05/php4-hay-php5/"/>
    <updated>2005-05-26T19:12:00+07:00</updated>
    <id>http://Narga.github.com/narga-octopress/2005/05/php4-hay-php5</id>
    <content type="html"><![CDATA[<p>Đọc bài viết này của pcdinh trên Goldenkey Forum:</p>

<blockquote><p>Việc chuyển từ PHP4 sang PHP5 không hề đơn giản. Những sai lầm trong PHP4 đã khiến cho con đường đi đến thành trì của PHP5 chứa đầy sỏi đá và chẳng bằng phẳng.</p></blockquote>

<!-- more -->


<blockquote><ol>
<li><p>Thứ nhất, có quá nhiều ứng dụng PHP viết theo kiểu cấu trúc khiến cho tính OO trong PHP5 không hề hấp dẫn. Viết lại chúng ư? Một công việc khổng lồ. Ai sẽ trả tiền?</p></li>
<li><p>Thứ hai, có nhiều ứng dụng xen lẫn cả thủ tục và đối tượng, nhưng là một thứ đối tượng dở người của PHP4. Việc chuyển sang chạy trên PHP5 sẽ tạo ra các điểm break mà phát hiện ra chúng không hề dễ dàng.</p></li>
<li><p>Thứ ba, dân lập trình PHP đa phần là dân tài tử. PHP đã tạo nên một hàng rào rất thấp khiến cho ai cũng có thể trở thành một lập trình viên. Không có coding convention thống nhất, API thì phi chuẩn, code mã thì thủ tục, không có tiền lệ sử dụng các design pattern, không có sự khuyến khích dùng lại mã, không khuyến khích các best practice trong lập trình, không khuyến khích test driven... Trở nên chuyên nghiệp hơn với OOP ư? Ai sẽ trả tiền?</p></li>
<li><p>Thứ tư, đa số các ứng dụng PHP là viết vì lý do cá nhân hoặc là mã nguồn mở viết vì vui thích hay một nhu cầu trước mắt. Điều này khác với Java, một công nghệ hướng vào thị trường doanh nghiệp, nơi mà người ta khuyến khích dùng lại mã vì... ông chủ không vui khi trả tiền 2 lần để có cùng một đoạn mã và này, các lập trình viên trẻ, hãy viết ra sao để khi các cậu đếch làm cho tôi nữa thì sẽ có người khác gánh vác công việc của cậu vì khách hàng đó còn làm việc với chúng ta dài đấy.</p></li>
<li><p>Thứ năm, hướng đối tượng ư? Doanh nghiệp ư? Tại sao không phải là Java mà lại là PHP5? Tôi tưởng PHP chỉ dùng để code forum, mấy trang tin nhỏ nho hay đại loại cái gì đó be bé thôi chứ? Cộng đồng PHP ư? Ôi cộng đồng là một lũ nhăng nhố, nay ở mai đi, ai dám khẳng định họ sẽ cam kết cho sự phát triển kinh doanh của tôi? Mã nguồn mở? Chúa ơi, tôi là một bậc thầy về kinh doanh mà Thượng Đế của tôi lại là lợi nhuận. Xin lỗi nhé ông ta không biết đọc mã nguồn. Hãy chỉ cho tôi ai là người có khả năng đọc nó. Chúng tôi cần tiết kiệm tiền nhưng chúng tôi cũng cần nhanh chóng và rủi ro thấp nữa. Mã nguồn mở không có nghĩa là phi rủi ro.</p></li>
</ol>
</blockquote>

<ol>
<li>Thứ sáu, chúa ơi, Andi và Gutman có biết đến câu Tồi hơn là tốt hơn không vậy? Xin đứng bắt tôi học thêm. Tại sao tôi phải học nấu cơm trong khi tôi đã có sẵn mì ăn liền. Lập trình PHP4 dễ như đi câu cá. Xin đừng làm cho tính lãng mạng của tôi bị ảnh hưởng với sự trừu tượng của OOP. Đẳng cấp doanh nghiệp ư? Xin đừng làm tôi mê muội bằng những ngôn ngữ mang tính dịch thuật và marketing của nhóm PHPVietnam. Tôi ngán chúng nó đến tận cổ rồi. Dù có thêm PHP5 hay PHP6 thì tôi vẫn chỉ code PHP cho cá nhân tôi và cái phần mềm của tôi vẫn be bé như thế. 10.000 hay 20.000 request 1 giây ư? Lạy chúa, băng thông của con chỉ có 3GB 1 tháng. Xin chúa rủ lòng thương.</li>
</ol>


<p>Tóm lại, việc chuyển từ PHP4 sang PHP5 đang bị chi phối rất nhiều vào tầm cỡ cộng đồng (dân PHP không có nhiều người thông minh đâu), tính tương thích của các ứng dụng đang dùng, số ứng dụng mới có khả năng thay thế chạy được trên PHP5, tâm lý chống đối và ngại chuyển đổi, sự đón nhận PHP từ phía doanh nghiệp. Đây là những điều mà tôi đã rút ra sau khi đã lập ra PHPVietnam.</p>

<p>Thời gian sẽ trả lời và việc quyết định là tùy ở bạn</p>

<p>và thêm nữa của lineage</p>

<blockquote><p>em có đọc một bài của một tiền bối với 30 năm kinh nghiệm làm về software engineering ở Carnegie Mellon University (một trong những trường dạy về Khoa học máy tính danh tiếng nhất nhì thế giới) , ông ấy nói rằng giới trẻ đừng bao giờ nên học .NET trước tiên mặc dù .NET rất là mạnh. Hãy học về Java, Perl hay Python trước để nắm được cái nền tảng về lập trình hướng đối tượng rồi sau đó học .NET sẽ nhanh hơn, hiểu rõ hơn. Ông ấy nói với cách học này ông tin chắc rằng người học sẽ tiến xa hơn rất nhiều, giỏi hơn nhiều so với những anh lười nhác chỉ biết dựa vào những công cụ có sẵn trong .NET.
Ông ấy nói Java và .NET không có khác gì nhau xét về nguyên lý vì .NET là một bản sao của Java về mặt ý tưởng + phong cách và những toan tính của Microsoft mà thôi. Microsoft bao giờ cũng là công ty có khả năng tạo ra các công cụ dễ làm việc nhất. Nhưng trong khi tạo điều kiện về mọi thứ thì user lại hòan toàn bị lệ thuộc. Họ chỉ biết kéo và thả hoặc chỉ biết ấn nút chứ đâu có biết cái gì nằm bên dưới. Rồi dần dần, cái ấn nút và kéo thả làm cho họ lười đi, họ quen với cái đó, họ không thể dứt ra được. Họ bị chi phối hòan toàn bởi M$.
Chuyển sang một ngôn ngữ mới ư ? Nhiều người chuyên về .NET (không phải tất cả) sẽ hỏi: nó có kéo thả không, nó có tiện ích như Visual Studio không.... Nghĩa là tài năng của họ đang thui chột, tính cơ động và khả năng ứng biến của họ đang giảm sút rõ rệt. Những người như thế khi công nghệ thay đổi họ dễ bị đứt quá vì khả năng học của họ giảm đi quá nhiều. Giống như con gà tre (sống bờ bụi) với con gà công nghiệp ấy mà. Dân .NET nhiều người tự biến họ thành con gà công nghiệp.
Các bác không tin ư? Cứ hỏi mấy bác chuyển từ VB 6 sang Java mà xem: luôn miệng hỏi: công cụ nào hỗ trợ kéo và thả để tạo giao diện. Ở Java không có tiền lệ đó mặc dù NetBeans có hỗ trợ kéo và thả. Chính vì thế, giới lập trình luôn coi trọng trình độ của dân Java hơn dân .NET. Do phải suy nghĩ nhiều hơn, làm việc nhiều hơn nên giới công nghệ ở Mĩ gọi dân Java là dân smart (thông minh).</p>

<p>Điều không may là ở giới PHP có nhiều người thiếu chuyên nghiệp, họ viết mã nhưng lại không hiểu gì về software engineering vì họ chẳng quan tâm đến điều đó. Trên các diễn đàn quốc tế, em gặp khối đứa có 12-13 tuổi code PHP ầm ầm. Hi vọng PHP5 sẽ trấn chỉnh lại hàng rào gia nhập đội ngũ PHP coder, yêu cầu họ nghĩ nhiều hơn trước khi viết, buộc họ đánh giá lại PHP và không coi PHP là ngôn ngữ mì ăn liền nữa.</p></blockquote>
]]></content>
  </entry>
  
</feed>
